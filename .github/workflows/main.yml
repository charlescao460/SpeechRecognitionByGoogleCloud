# This is a basic workflow to help you get started with Actions
name: .Net Framework CI Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Set up MSBuild.exe
      - name: Set-Up MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.1
      # Set up NuGet
      - name: Set-Up NuGet
        uses: nuget/setup-nuget@v1
      # Restore
      - name: NuGet Restore
        run: nuget restore SpeechRecognitionByGoogleCloud.sln
      # Build
      - name: Build Solution SpeechRecognitionByGoogleCloud.sln
        run: msbuild SpeechRecognitionByGoogleCloud.sln -p:Configuration=Release
      # Zip outputs
      - name: Zip Artifacts
        run: powershell Compress-Archive SpeechRecognitionByGoogleCloud\bin\Debug\* SpeechRecognition.Build#${{ github.run_id }}.zip
      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      # Upload Release 
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: SpeechRecognition.Build#${{ github.run_id }}.zip
          asset_name: SpeechRecognition.Build#${{ github.run_id }}.zip
          asset_content_type: application/zip
